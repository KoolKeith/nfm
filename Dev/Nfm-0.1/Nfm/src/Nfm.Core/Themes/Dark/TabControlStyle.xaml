<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:Controls="clr-namespace:Nfm.Core.Controls"
					xmlns:Themes="clr-namespace:Nfm.Core.Themes"
					xmlns:cb="http://caliburn.codeplex.com"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					mc:Ignorable="d">

	<!-- #FastTabControl Style -->
	<Style x:Key="{x:Static Themes:Theme.TabControlStyleKey}"
		   TargetType="{x:Type Controls:FastTabControl}">
		<Setter Property="Background"
				Value="{DynamicResource {x:Static Themes:Theme.BorderBrushKey}}" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource {x:Static Themes:Theme.BorderBrushKey}}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}" />
		<Setter Property="IsSynchronizedWithCurrentItem"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Controls:FastTabControl}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1">
							<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="dockPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="00:00:00">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="Storyboard2">
							<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="dockPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="00:00:00">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border Background="{DynamicResource {x:Static Themes:Theme.BackgroundBrushKey}}"
							BorderBrush="{DynamicResource {x:Static Themes:Theme.BorderBrushKey}}"
							BorderThickness="2,2,2,2"
							Padding="0"
							CornerRadius="5"
							SnapsToDevicePixels="True">
						<DockPanel LastChildFill="True">
							<DockPanel x:Name="dockPanel"
									   LastChildFill="True"
									   KeyboardNavigation.TabNavigation="None"
									   DockPanel.Dock="Top">
								<!-- Todo: Make it configurable: multiline tabs -->
								<!--<TabPanel Panel.ZIndex="1"
											  Margin="0,0,4,-1"
											  IsItemsHost="True"
											  Background="Transparent" />-->
								<Border Background="{DynamicResource {x:Static Themes:Theme.BackgroundBrushKey}}"
										BorderBrush="{DynamicResource {x:Static Themes:Theme.BackgroundBrushKey}}"
										BorderThickness="1,2,1,0"
										Padding="0,0,0,0"
										CornerRadius="5"
										DockPanel.Dock="Left">
									<WrapPanel x:Name="Tabs"
											   Focusable="False"
											   FocusManager.IsFocusScope="True"
											   KeyboardNavigation.TabNavigation="Cycle"
											   KeyboardNavigation.IsTabStop="False"
											   IsItemsHost="True" />
								</Border>
								<Border Background="{DynamicResource {x:Static Themes:Theme.BackgroundBrushKey}}"
										BorderBrush="{DynamicResource {x:Static Themes:Theme.BackgroundBrushKey}}"
										BorderThickness="0,2,2,0"
										Padding="0,0,0,0"
										CornerRadius="5"
										MinWidth="32">
									<DockPanel x:Name="Toolbar">
										<Button DockPanel.Dock="Right"
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												Width="16"
												Height="16"
												Style="{DynamicResource {x:Static Themes:Theme.CloseableTabItemButtonStyleKey}}">
											<cb:Message.Triggers>
												<cb:RoutedMessageTriggerCollection>
													<cb:EventMessageTrigger EventName="Click">
														<cb:CommandMessage Command="{cb:Resolve Key=ClosePanel}">
															<cb:Parameter Value="{Binding Mode=OneWay}" />
														</cb:CommandMessage>
													</cb:EventMessageTrigger>
												</cb:RoutedMessageTriggerCollection>
											</cb:Message.Triggers>
										</Button>
										<Button DockPanel.Dock="Left"
												HorizontalAlignment="Left"
												VerticalAlignment="Center"
												Width="16"
												Height="16"
												Style="{DynamicResource {x:Static Themes:Theme.DuplicateTabItemButtonStyleKey}}">
											<cb:Message.Triggers>
												<cb:RoutedMessageTriggerCollection>
													<cb:EventMessageTrigger EventName="Click">
														<cb:CommandMessage Command="{cb:Resolve Key=DublicateSelectedPanel}">
															<cb:Parameter Value="{Binding Path=Active, Mode=OneWay}" />
														</cb:CommandMessage>
													</cb:EventMessageTrigger>
												</cb:RoutedMessageTriggerCollection>
											</cb:Message.Triggers>
										</Button>
									</DockPanel>
								</Border>
							</DockPanel>
							<CheckBox x:Name="ToggleTabs"
									  Content=""
									  DockPanel.Dock="Top"
									  Height="8"
									  Background="{DynamicResource {x:Static Themes:Theme.BorderBrushKey}}"
									  IsChecked="True"
									  Focusable="False">
								<CheckBox.Template>
									<ControlTemplate TargetType="{x:Type CheckBox}">
										<Border x:Name="ToggleBorder"
												Background="{DynamicResource {x:Static Themes:Theme.BorderBrushKey}}"
												BorderBrush="{DynamicResource {x:Static Themes:Theme.BorderBrushKey}}"
												BorderThickness="0"
												Margin="2,2,2,0"
												CornerRadius="3" />
										<ControlTemplate.Triggers>
<!--											<MultiTrigger>-->
<!--												<MultiTrigger.Conditions>-->
<!--													<Condition Property="IsMouseOver"-->
<!--															   Value="True" />-->
<!--												</MultiTrigger.Conditions>-->
<!--												<MultiTrigger.Setters>-->
<!--													<Setter TargetName="ToggleBorder"-->
<!--															Property="Background"-->
<!--															Value="{DynamicResource {x:Static Themes:Theme.HoverBackgroundBrushKey}}" />-->
<!--												</MultiTrigger.Setters>-->
<!--											</MultiTrigger>-->
											<MultiTrigger>
												<MultiTrigger.Conditions>
													<Condition Property="IsChecked"
															   Value="True" />
													<Condition Property="IsMouseOver"
															   Value="False" />
												</MultiTrigger.Conditions>
												<MultiTrigger.Setters>
													<Setter TargetName="ToggleBorder"
															Property="Background"
															Value="{DynamicResource {x:Static Themes:Theme.BackgroundBrushKey}}" />
												</MultiTrigger.Setters>
											</MultiTrigger>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter TargetName="ToggleBorder"
														Property="Background"
														Value="{DynamicResource {x:Static Themes:Theme.HoverBackgroundBrushKey}}" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</CheckBox.Template>
							</CheckBox>
<!--							
							<Border x:Name="TabsTopArea"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="2"
								Padding="{TemplateBinding Padding}"
								CornerRadius="5"
								DockPanel.Dock="Top"/>
-->
							<Grid x:Name="PART_ItemsHolder"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  Margin="2,2,2,2" />
<!--								
							<Border x:Name="TabsContentArea"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Padding="0"
									CornerRadius="5">
-->
<!-- Note: TabControlEx to display selected tab content use grid insted of content presenter -->
<!--							<ContentPresenter x:Name="PART_SelectedContentHost"-->
<!--											  ContentSource="SelectedContent"-->
<!--											  Margin="{TemplateBinding Padding}"-->
<!--											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />-->
<!--							
							</Border>
-->
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger SourceName="ToggleTabs"
								 Property="IsChecked"
								 Value="True" >
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource Storyboard2}"/>
							</Trigger.ExitActions>
							<Setter Property="IsChecked" TargetName="ToggleTabs" Value="True"/>
						</Trigger>
<!--						<DataTrigger Binding="{Binding Path=Items.Count, IsAsync=True, RelativeSource={RelativeSource Mode=Self}}"-->
<!--							Value="1">-->
<!--							<Setter TargetName="dockPanel"-->
<!--								Property="Visibility"-->
<!--								Value="Collapsed" />-->
<!--						</DataTrigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>