<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:DrapDrop="clr-namespace:Nfm.Core.Controls.DragDrop">

	<!-- #TabItem Style -->
	<Style x:Key="TabItemStyle"
		   TargetType="{x:Type TabItem}">
		<Style.Resources>
			<DrapDrop:PanelDragSourceAdvisor x:Key="PanelDragSourceAdvisor" />
			<DrapDrop:PanelDropTargetAdvisor x:Key="PanelDropTargetAdvisor" />
		</Style.Resources>
		<Setter Property="BorderBrush"
				Value="{DynamicResource BorderBrush}" />
		<Setter Property="BorderThickness"
				Value="2" />
		<Setter Property="Foreground"
				Value="White" />
		<Setter Property="Background"
				Value="{DynamicResource SelectedTabBackgroundBrush}" />
		<Setter Property="FontFamily"
				Value="Verdana" />
		<Setter Property="FontSize"
				Value="12" />
		<Setter Property="Padding"
				Value="5" />
		<Setter Property="Margin"
				Value="1" />
		<Setter Property="IsTabStop"
				Value="False" />
<!--		<Setter Property="Focusable"-->
<!--				Value="False" />-->
		<Setter Property="IsSelected"
				Value="{Binding IsSelected}" />
<!--		<Setter Property="FocusVisualStyle"-->
<!--				Value="{x:Null}" />-->
		<Setter Property="DragDropManager.DragSourceAdvisor"
				Value="{DynamicResource PanelDragSourceAdvisor}"/>
		<Setter Property="DragDropManager.DropTargetAdvisor"
				Value="{DynamicResource PanelDropTargetAdvisor}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Border x:Name="Border"
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{DynamicResource BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="5"
							SnapsToDevicePixels="True">
						<DockPanel>
							<Button x:Name="CloseButton"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Width="16"
									Height="16"
									Margin="0,0,5,0"
									DockPanel.Dock="Right"
									Style="{DynamicResource CloseableTabItemButtonStyle}">
								<Message.Triggers>
									<RoutedMessageTriggerCollection>
										<EventMessageTrigger EventName="Click">
											<CommandMessage Command="{Resolve Key=ClosePanel}">
												<Parameter Value="{Binding Mode=OneWay}" />
											</CommandMessage>
										</EventMessageTrigger>
									</RoutedMessageTriggerCollection>
								</Message.Triggers>
							</Button>
							<ContentPresenter x:Name="ContentSite"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Center"
											  ContentSource="Header"
											  Margin="{TemplateBinding Padding}" />
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected"
								 Value="True">
							<Setter TargetName="Border"
									Property="Background"
									Value="Transparent" />
							<Setter TargetName="Border"
									Property="BorderThickness"
									Value="2" />
							<!-- Todo: Make it configurable: multiline tabs appearence -->
							<!--<Setter Property="Margin"
									Value="0" />-->
							<!--<Setter TargetName="Border"
									Property="CornerRadius"
									Value="5,5,0,0" />-->
							<Setter TargetName="Border"
									Property="CornerRadius"
									Value="5,5,5,5" />
							<!--Todo: Make it configurable: tab close button visibility -->
<!--							<Setter TargetName="CloseButton"-->
<!--									Property="Visibility"-->
<!--									Value="Visible" />-->
						</Trigger>
<!--						<Trigger Property="IsSelected"-->
<!--								 Value="False">-->
<!--							<Setter TargetName="Border"-->
<!--									Property="Background"-->
<!--									Value="{DynamicResource SelectedTabBackgroundBrush}" />-->
<!--						</Trigger>-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsSelected"
										   Value="False" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="Border"
										Property="Background"
										Value="{DynamicResource HoverBackgroundBrush}" />
							</MultiTrigger.Setters>
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocused"
								 Value="true">
							<Setter TargetName="Border"
									Property="BorderBrush"
									Value="Blue" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>