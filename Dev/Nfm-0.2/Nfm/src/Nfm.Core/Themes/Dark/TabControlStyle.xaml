<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:Controls="clr-namespace:Nfm.Core.Controls"
					xmlns:Converters="clr-namespace:Nfm.Core.Converters"
					xmlns:Icons="clr-namespace:Nfm.Core.Resources.Icons"
					xmlns:Themes="clr-namespace:Nfm.Core.Themes"
					xmlns:cb="http://www.caliburnproject.org"
					mc:Ignorable="d">

	<Style x:Key="{x:Static Themes:Theme.TabControlStyleKey}"
		   TargetType="{x:Type Controls:FastTabControl}">
		<Setter Property="Background"
				Value="{DynamicResource {x:Static Themes:Theme.WorkAreaBackgroundBrushKey}}" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource {x:Static Themes:Theme.WorkAreaBackgroundBrushKey}}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}" />
		<Setter Property="IsSynchronizedWithCurrentItem"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Controls:FastTabControl}">
					<Border Background="{DynamicResource {x:Static Themes:Theme.ToolbarBrushKey}}"
							BorderBrush="{DynamicResource {x:Static Themes:Theme.WorkAreaBackgroundBrushKey}}"
							BorderThickness="2,2,2,2"
							Padding="0"
							CornerRadius="5"
							SnapsToDevicePixels="True">
						<DockPanel LastChildFill="True">
							<DockPanel x:Name="dockPanel"
									   Visibility="{Binding Path=Header.IsVisible, Converter={Converters:BoolToVisibilityConverter}, Mode=TwoWay}"
									   DockPanel.Dock="Top"
									   KeyboardNavigation.TabNavigation="None"
									   LastChildFill="True">
								<Border Background="{DynamicResource {x:Static Themes:Theme.ToolbarBrushKey}}"
										BorderBrush="{DynamicResource {x:Static Themes:Theme.ToolbarBrushKey}}"
										BorderThickness="1,2,1,0"
										CornerRadius="5">
									<WrapPanel x:Name="Tabs"
											   Focusable="False"
											   FocusManager.IsFocusScope="True"
											   KeyboardNavigation.DirectionalNavigation="Cycle"
											   KeyboardNavigation.IsTabStop="False"
											   IsItemsHost="True" />
								</Border>
								<Border Background="{DynamicResource {x:Static Themes:Theme.ToolbarBrushKey}}"
										BorderBrush="{DynamicResource {x:Static Themes:Theme.ToolbarBrushKey}}"
										BorderThickness="0,2,2,0"
										CornerRadius="5"
										MinWidth="32"
										HorizontalAlignment="Stretch">
									<DockPanel x:Name="Toolbar">
										<Button x:Name="Add"
												Width="16"
												Height="16"
												ToolTip="Duplicate selected tab"
												HorizontalAlignment="Left"
												VerticalAlignment="Center"
												Style="{DynamicResource {x:Static Themes:Theme.ToolbarButtonStyleKey}}"
												Padding="3,3,3,3">
											<Icons:AddIcon />
											<cb:Message.Triggers>
												<cb:RoutedMessageTriggerCollection>
													<cb:EventMessageTrigger EventName="Click">
														<cb:CommandMessage Command="{cb:Resolve Key=DublicateSelectedPanel}">
															<cb:Parameter Value="{Binding Path=Active, Mode=OneWay}" />
														</cb:CommandMessage>
													</cb:EventMessageTrigger>
												</cb:RoutedMessageTriggerCollection>
											</cb:Message.Triggers>
										</Button>
										<Button x:Name="Close"
												Width="16"
												Height="16"
												ToolTip="Close"
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												DockPanel.Dock="Right"
												Style="{DynamicResource {x:Static Themes:Theme.ToolbarButtonStyleKey}}"
												Padding="3,3,3,3">
											<Icons:CloseIcon />
											<cb:Message.Triggers>
												<cb:RoutedMessageTriggerCollection>
													<cb:EventMessageTrigger EventName="Click">
														<cb:CommandMessage Command="{cb:Resolve Key=ClosePanel}">
															<cb:Parameter Value="{Binding Mode=OneWay}" />
														</cb:CommandMessage>
													</cb:EventMessageTrigger>
												</cb:RoutedMessageTriggerCollection>
											</cb:Message.Triggers>
										</Button>
										<Button x:Name="Toggle"
												Width="16"
												Height="16"
												ToolTip="Collapse header"
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												DockPanel.Dock="Right"
												Style="{DynamicResource {x:Static Themes:Theme.ToolbarButtonStyleKey}}"
												Padding="3,3,3,3">
											<Icons:DoubleArrowIcon />
											<cb:Message.Triggers>
												<cb:RoutedMessageTriggerCollection>
													<cb:EventMessageTrigger EventName="Click">
														<cb:CommandMessage Command="{cb:Resolve Key=TogglePanelHeader}">
															<cb:Parameter Value="{Binding Mode=OneWay}" />
														</cb:CommandMessage>
													</cb:EventMessageTrigger>
												</cb:RoutedMessageTriggerCollection>
											</cb:Message.Triggers>
										</Button>
									</DockPanel>
								</Border>
							</DockPanel>
							<Button x:Name="ToggleTabs"
									Content=""
									DockPanel.Dock="Top"
									Height="8"
									Background="{DynamicResource {x:Static Themes:Theme.IconBrushKey}}"
									BorderThickness="0"
									Visibility="{Binding Path=Header.IsHidden, Converter={Converters:BoolToVisibilityConverter}}"
									Focusable="False"
									ToolTip="Expand header">
								<Button.Template>
									<ControlTemplate TargetType="{x:Type Button}">
										<ControlTemplate.Resources>
											<Storyboard x:Key="Hover">
												<ColorAnimationUsingKeyFrames BeginTime="00:00:00"
																			  Storyboard.TargetName="ToggleBorder"
																			  Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
													<!-- Todo: {DynamicResource {{x:Static Themes:Theme.IconHoverBrushKey}} -->
													<SplineColorKeyFrame KeyTime="00:00:00.2000000"
																		 Value="#FFB83C3D" />
												</ColorAnimationUsingKeyFrames>
											</Storyboard>
											<Storyboard x:Key="Rollback">
												<ColorAnimationUsingKeyFrames BeginTime="00:00:00"
																			  Storyboard.TargetName="ToggleBorder"
																			  Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
													<!-- Todo: {DynamicResource {{x:Static Themes:Theme.IconBrushKey}} -->
													<SplineColorKeyFrame KeyTime="00:00:00.2000000"
																		 Value="#FF969696" />
												</ColorAnimationUsingKeyFrames>
											</Storyboard>
										</ControlTemplate.Resources>
										<Border x:Name="ToggleBorder"
												Background="{TemplateBinding Background}"
												BorderThickness="{TemplateBinding BorderThickness}"
												Margin="2,2,2,0"
												CornerRadius="3" />
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Trigger.ExitActions>
													<BeginStoryboard x:Name="Rollback_BeginStoryboard"
																	 Storyboard="{StaticResource Rollback}" />
												</Trigger.ExitActions>
												<Trigger.EnterActions>
													<BeginStoryboard x:Name="Hover_BeginStoryboard"
																	 Storyboard="{StaticResource Hover}" />
												</Trigger.EnterActions>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Button.Template>
								<cb:Message.Triggers>
									<cb:RoutedMessageTriggerCollection>
										<cb:EventMessageTrigger EventName="Click">
											<cb:CommandMessage Command="{cb:Resolve Key=TogglePanelHeader}">
												<cb:Parameter Value="{Binding Mode=OneWay}" />
											</cb:CommandMessage>
										</cb:EventMessageTrigger>
									</cb:RoutedMessageTriggerCollection>
								</cb:Message.Triggers>
							</Button>
							<Border Margin="1,1,1,1"
									CornerRadius="5,5,5,5"
									Background="{DynamicResource {x:Static Themes:Theme.WorkAreaBackgroundBrushKey}}">

								<Grid x:Name="PART_ItemsHolder"
									  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
<!-- 
								<Border x:Name="TabsContentArea"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Padding="0"
									CornerRadius="5" />
-->
<!-- Note: TabControlEx to display selected tab content use grid insted of content presenter -->
<!--							<ContentPresenter x:Name="PART_SelectedContentHost"-->
<!--											  ContentSource="SelectedContent"-->
<!--											  Margin="{TemplateBinding Padding}"-->
<!--											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />-->
						</DockPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>